import jwt from "jsonwebtoken";
// const generateToken = async (res, userId) => {
//   const token = jwt.sign({ userId }, process.env.JWT_SECRET, {
//     expiresIn: "30d",
//   });
//   res.cookie("jwt", token, {
//     httpOnly: true,
//     secure: process.env.NODE_ENV !== "development",
//     sameSite: "strict",
//     maxAge: 30 * 24 * 60 * 60 * 1000,
//   });
// };
// export default generateToken;

const generateToken = (res, userId) => {
  const token = jwt.sign({ userId }, process.env.JWT_SECRET, {
    expiresIn: "30d",
  });

  // Set JWT as an HTTP-Only cookie
  res.cookie("jwt", token, {
    httpOnly: true,
    secure: process.env.NODE_ENV !== "development", // Use secure cookies in production
    sameSite: "strict", // Prevent CSRF attacks
    maxAge: 30 * 24 * 60 * 60 * 1000, // 30 days
  });
  console.log(token);
};

export default generateToken;

// ServerResponse {
// [0]   _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
// [0]   _eventsCount: 1,
// [0]   _maxListeners: undefined,
// [0]   outputData: [],
// [0]   outputSize: 0,
// [0]   writable: true,
// [0]   destroyed: false,
// [0]   _last: false,
// [0]   chunkedEncoding: false,
// [0]   shouldKeepAlive: true,
// [0]   maxRequestsOnConnectionReached: false,
// [0]   _defaultKeepAlive: true,
// [0]   useChunkedEncodingByDefault: true,
// [0]   sendDate: true,
// [0]   _removedConnection: false,
// [0]   _removedContLen: false,
// [0]   _removedTE: false,
// [0]   strictContentLength: false,
// [0]   _contentLength: null,
// [0]   _hasBody: true,
// [0]   _trailer: '',
// [0]   finished: false,
// [0]   _headerSent: false,
// [0]   _closed: false,
// [0]   _header: null,
// [0]   _keepAliveTimeout: 5000,
// [0]   _onPendingData: [Function: bound updateOutgoingData],
// [0]   req: IncomingMessage {
// [0]     _events: {
// [0]       close: undefined,
// [0]       error: undefined,
// [0]       data: undefined,
// [0]       end: undefined,
// [0]       readable: undefined,
// [0]       aborted: undefined
// [0]     },
// [0]     _readableState: ReadableState {
// [0]       highWaterMark: 16384,
// [0]       buffer: [],
// [0]       bufferIndex: 0,
// [0]       length: 0,
// [0]       pipes: [],
// [0]       awaitDrainWriters: null,
// [0]       [Symbol(kState)]: 60295036
// [0]     },
// [0]     _maxListeners: undefined,
// [0]     socket: Socket {
// [0]       connecting: false,
// [0]       _hadError: false,
// [0]       _parent: null,
// [0]       _host: null,
// [0]       _closeAfterHandlingError: false,
// [0]       _events: [Object],
// [0]       _readableState: [ReadableState],
// [0]       _writableState: [WritableState],
// [0]       allowHalfOpen: true,
// [0]       _maxListeners: undefined,
// [0]       _eventsCount: 8,
// [0]       _sockname: null,
// [0]       _pendingData: null,
// [0]       _pendingEncoding: '',
// [0]       server: [Server],
// [0]       _server: [Server],
// [0]       parser: [HTTPParser],
// [0]       on: [Function: socketListenerWrap],
// [0]       addListener: [Function: socketListenerWrap],
// [0]       prependListener: [Function: socketListenerWrap],
// [0]       setEncoding: [Function: socketSetEncoding],
// [0]       _paused: false,
// [0]       _httpMessage: [Circular *1],
// [0]       timeout: 0,
// [0]       [Symbol(async_id_symbol)]: 311,
// [0]       [Symbol(kHandle)]: [TCP],
// [0]       [Symbol(lastWriteQueueSize)]: 0,
// [0]       [Symbol(timeout)]: Timeout {
// [0]         _idleTimeout: -1,
// [0]         _idlePrev: null,
// [0]         _idleNext: null,
// [0]         _idleStart: 8772,
// [0]         _onTimeout: null,
// [0]         _timerArgs: undefined,
// [0]         _repeat: null,
// [0]         _destroyed: true,
// [0]         [Symbol(refed)]: false,
// [0]         [Symbol(kHasPrimitive)]: false,
// [0]         [Symbol(asyncId)]: 331,
// [0]         [Symbol(triggerId)]: 327,
// [0]         [Symbol(kAsyncContextFrame)]: undefined
// [0]       },
// [0]       [Symbol(kBuffer)]: null,
// [0]       [Symbol(kBufferCb)]: null,
// [0]       [Symbol(kBufferGen)]: null,
// [0]       [Symbol(shapeMode)]: true,
// [0]       [Symbol(kCapture)]: false,
// [0]       [Symbol(kSetNoDelay)]: true,
// [0]       [Symbol(kSetKeepAlive)]: false,
// [0]       [Symbol(kSetKeepAliveInitialDelay)]: 0,
// [0]       [Symbol(kBytesRead)]: 0,
// [0]       [Symbol(kBytesWritten)]: 0
// [0]     },
// [0]     httpVersionMajor: 1,
// [0]     httpVersionMinor: 1,
// [0]     httpVersion: '1.1',
// [0]     complete: true,
// [0]     rawHeaders: [
// [0]       'Host',
// [0]       'localhost:5000',
// [0]       'Connection',
// [0]       'keep-alive',
// [0]       'Content-Length',
// [0]       '47',
// [0]       'sec-ch-ua-platform',
// [0]       '"Windows"',
// [0]       'User-Agent',
// [0]       'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36',
// [0]       'sec-ch-ua',
// [0]       '"Brave";v="129", "Not=A?Brand";v="8", "Chromium";v="129"',
// [0]       'content-type',
// [0]       'application/json',
// [0]       'sec-ch-ua-mobile',
// [0]       '?0',
// [0]       'Accept',
// [0]       '*/*',
// [0]       'Sec-GPC',
// [0]       '1',
// [0]       'Accept-Language',
// [0]       'en-GB,en',
// [0]       'Origin',
// [0]       'http://localhost:3000',
// [0]       'Sec-Fetch-Site',
// [0]       'same-site',
// [0]       'Sec-Fetch-Mode',
// [0]       'cors',
// [0]       'Sec-Fetch-Dest',
// [0]       'empty',
// [0]       'Referer',
// [0]       'http://localhost:3000/',
// [0]       'Accept-Encoding',
// [0]       'gzip, deflate, br, zstd'
// [0]     ],
// [0]     rawTrailers: [],
// [0]     joinDuplicateHeaders: null,
// [0]     aborted: false,
// [0]     upgrade: false,
// [0]     url: '/auth',
// [0]     method: 'POST',
// [0]     statusCode: null,
// [0]     statusMessage: null,
// [0]     client: Socket {
// [0]       connecting: false,
// [0]       _hadError: false,
// [0]       _parent: null,
// [0]       _host: null,
// [0]       _closeAfterHandlingError: false,
// [0]       _events: [Object],
// [0]       _readableState: [ReadableState],
// [0]       _writableState: [WritableState],
// [0]       allowHalfOpen: true,
// [0]       _maxListeners: undefined,
// [0]       _eventsCount: 8,
// [0]       _sockname: null,
// [0]       _pendingData: null,
// [0]       _pendingEncoding: '',
// [0]       server: [Server],
// [0]       _server: [Server],
// [0]       parser: [HTTPParser],
// [0]       on: [Function: socketListenerWrap],
// [0]       addListener: [Function: socketListenerWrap],
// [0]       prependListener: [Function: socketListenerWrap],
// [0]       setEncoding: [Function: socketSetEncoding],
// [0]       _paused: false,
// [0]       _httpMessage: [Circular *1],
// [0]       timeout: 0,
// [0]       [Symbol(async_id_symbol)]: 311,
// [0]       [Symbol(kHandle)]: [TCP],
// [0]       [Symbol(lastWriteQueueSize)]: 0,
// [0]       [Symbol(timeout)]: Timeout {
// [0]         _idleTimeout: -1,
// [0]         _idlePrev: null,
// [0]         _idleNext: null,
// [0]         _idleStart: 8772,
// [0]         _onTimeout: null,
// [0]         _timerArgs: undefined,
// [0]         _repeat: null,
// [0]         _destroyed: true,
// [0]         [Symbol(refed)]: false,
// [0]         [Symbol(kHasPrimitive)]: false,
// [0]         [Symbol(asyncId)]: 331,
// [0]         [Symbol(triggerId)]: 327,
// [0]         [Symbol(kAsyncContextFrame)]: undefined
// [0]       },
// [0]       [Symbol(kBuffer)]: null,
// [0]       [Symbol(kBufferCb)]: null,
// [0]       [Symbol(kBufferGen)]: null,
// [0]       [Symbol(shapeMode)]: true,
// [0]       [Symbol(kCapture)]: false,
// [0]       [Symbol(kSetNoDelay)]: true,
// [0]       [Symbol(kSetKeepAlive)]: false,
// [0]       [Symbol(kSetKeepAliveInitialDelay)]: 0,
// [0]       [Symbol(kBytesRead)]: 0,
// [0]       [Symbol(kBytesWritten)]: 0
// [0]     },
// [0]     _consuming: true,
// [0]     _dumped: false,
// [0]     next: [Function: next],
// [0]     baseUrl: '/api/users',
// [0]     originalUrl: '/api/users/auth',
// [0]     _parsedUrl: Url {
// [0]       protocol: null,
// [0]       slashes: null,
// [0]       auth: null,
// [0]       host: null,
// [0]       port: null,
// [0]       hostname: null,
// [0]       hash: null,
// [0]       search: null,
// [0]       query: null,
// [0]       pathname: '/auth',
// [0]       path: '/auth',
// [0]       href: '/auth',
// [0]       _raw: '/auth'
// [0]     },
// [0]     params: {},
// [0]     query: {},
// [0]     res: [Circular *1],
// [0]     body: { email: 'admin@email.com', password: '123456' },
// [0]     _body: true,
// [0]     length: undefined,
// [0]     _eventsCount: 0,
// [0]     secret: undefined,
// [0]     cookies: [Object: null prototype] {},
// [0]     signedCookies: [Object: null prototype] {},
// [0]     route: Route { path: '/auth', stack: [Array], methods: [Object] },
// [0]     [Symbol(shapeMode)]: true,
// [0]     [Symbol(kCapture)]: false,
// [0]     [Symbol(kHeaders)]: {
// [0]       host: 'localhost:5000',
// [0]       connection: 'keep-alive',
// [0]       'content-length': '47',
// [0]       'sec-ch-ua-platform': '"Windows"',
// [0]       'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36',
// [0]       'sec-ch-ua': '"Brave";v="129", "Not=A?Brand";v="8", "Chromium";v="129"',
// [0]       'content-type': 'application/json',
// [0]       'sec-ch-ua-mobile': '?0',
// [0]       accept: '*/*',
// [0]       'sec-gpc': '1',
// [0]       'accept-language': 'en-GB,en',
// [0]       origin: 'http://localhost:3000',
// [0]       'sec-fetch-site': 'same-site',
// [0]       'sec-fetch-mode': 'cors',
// [0]       'sec-fetch-dest': 'empty',
// [0]       referer: 'http://localhost:3000/',
// [0]       'accept-encoding': 'gzip, deflate, br, zstd'
// [0]     },
// [0]     [Symbol(kHeadersCount)]: 34,
// [0]     [Symbol(kTrailers)]: null,
// [0]     [Symbol(kTrailersCount)]: 0
// [0]   },
// [0]   _sent100: false,
// [0]   _expect_continue: false,
// [0]   _maxRequestsPerSocket: 0,
// [0]   locals: [Object: null prototype] {},
// [0]   [Symbol(shapeMode)]: false,
// [0]   [Symbol(kCapture)]: false,
// [0]   [Symbol(kBytesWritten)]: 0,
// [0]   [Symbol(kNeedDrain)]: false,
// [0]   [Symbol(corked)]: 0,
// [0]   [Symbol(kChunkedBuffer)]: [],
// [0]   [Symbol(kChunkedLength)]: 0,
// [0]   [Symbol(kSocket)]: <ref *2> Socket {
// [0]     connecting: false,
// [0]     _hadError: false,
// [0]     _parent: null,
// [0]     _host: null,
// [0]     _closeAfterHandlingError: false,
// [0]     _events: {
// [0]       close: [Array],
// [0]       error: [Function: socketOnError],
// [0]       prefinish: undefined,
// [0]       finish: undefined,
// [0]       drain: [Function: bound socketOnDrain],
// [0]       data: [Function: bound socketOnData],
// [0]       end: [Array],
// [0]       readable: undefined,
// [0]       timeout: [Function: socketOnTimeout],
// [0]       resume: [Function: onSocketResume],
// [0]       pause: [Function: onSocketPause]
// [0]     },
// [0]     _readableState: ReadableState {
// [0]       highWaterMark: 16384,
// [0]       buffer: [],
// [0]       bufferIndex: 0,
// [0]       length: 0,
// [0]       pipes: [],
// [0]       awaitDrainWriters: null,
// [0]       [Symbol(kState)]: 193997060
// [0]     },
// [0]     _writableState: WritableState {
// [0]       highWaterMark: 16384,
// [0]       length: 0,
// [0]       corked: 0,
// [0]       onwrite: [Function: bound onwrite],
// [0]       writelen: 0,
// [0]       bufferedIndex: 0,
// [0]       pendingcb: 0,
// [0]       [Symbol(kState)]: 17563908,
// [0]       [Symbol(kBufferedValue)]: null,
// [0]       [Symbol(kWriteCbValue)]: null,
// [0]       [Symbol(kAfterWriteTickInfoValue)]: null
// [0]     },
// [0]     allowHalfOpen: true,
// [0]     _maxListeners: undefined,
// [0]     _eventsCount: 8,
// [0]     _sockname: null,
// [0]     _pendingData: null,
// [0]     _pendingEncoding: '',
// [0]     server: Server {
// [0]       maxHeaderSize: undefined,
// [0]       insecureHTTPParser: undefined,
// [0]       requestTimeout: 300000,
// [0]       headersTimeout: 60000,
// [0]       keepAliveTimeout: 5000,
// [0]       connectionsCheckingInterval: 30000,
// [0]       requireHostHeader: true,
// [0]       joinDuplicateHeaders: undefined,
// [0]       rejectNonStandardBodyWrites: false,
// [0]       _events: [Object: null prototype],
// [0]       _eventsCount: 3,
// [0]       _maxListeners: undefined,
// [0]       _connections: 1,
// [0]       _handle: [TCP],
// [0]       _usingWorkers: false,
// [0]       _workers: [],
// [0]       _unref: false,
// [0]       _listeningId: 2,
// [0]       allowHalfOpen: true,
// [0]       pauseOnConnect: false,
// [0]       noDelay: true,
// [0]       keepAlive: false,
// [0]       keepAliveInitialDelay: 0,
// [0]       highWaterMark: 16384,
// [0]       httpAllowHalfOpen: false,
// [0]       timeout: 0,
// [0]       maxHeadersCount: null,
// [0]       maxRequestsPerSocket: 0,
// [0]       _connectionKey: '6::::5000',
// [0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
// [0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
// [0]       [Symbol(shapeMode)]: false,
// [0]       [Symbol(kCapture)]: false,
// [0]       [Symbol(async_id_symbol)]: 125,
// [0]       [Symbol(kUniqueHeaders)]: null,
// [0]       [Symbol(http.server.connections)]: ConnectionsList {},
// [0]       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
// [0]         _idleTimeout: 30000,
// [0]         _idlePrev: [TimersList],
// [0]         _idleNext: [TimersList],
// [0]         _idleStart: 864,
// [0]         _onTimeout: [Function: bound checkConnections],
// [0]         _timerArgs: undefined,
// [0]         _repeat: 30000,
// [0]         _destroyed: false,
// [0]         [Symbol(refed)]: false,
// [0]         [Symbol(kHasPrimitive)]: false,
// [0]         [Symbol(asyncId)]: 128,
// [0]         [Symbol(triggerId)]: 126,
// [0]         [Symbol(kAsyncContextFrame)]: undefined
// [0]       }
// [0]     },
// [0]     _server: Server {
// [0]       maxHeaderSize: undefined,
// [0]       insecureHTTPParser: undefined,
// [0]       requestTimeout: 300000,
// [0]       headersTimeout: 60000,
// [0]       keepAliveTimeout: 5000,
// [0]       connectionsCheckingInterval: 30000,
// [0]       requireHostHeader: true,
// [0]       joinDuplicateHeaders: undefined,
// [0]       rejectNonStandardBodyWrites: false,
// [0]       _events: [Object: null prototype],
// [0]       _eventsCount: 3,
// [0]       _maxListeners: undefined,
// [0]       _connections: 1,
// [0]       _handle: [TCP],
// [0]       _usingWorkers: false,
// [0]       _workers: [],
// [0]       _unref: false,
// [0]       _listeningId: 2,
// [0]       allowHalfOpen: true,
// [0]       pauseOnConnect: false,
// [0]       noDelay: true,
// [0]       keepAlive: false,
// [0]       keepAliveInitialDelay: 0,
// [0]       highWaterMark: 16384,
// [0]       httpAllowHalfOpen: false,
// [0]       timeout: 0,
// [0]       maxHeadersCount: null,
// [0]       maxRequestsPerSocket: 0,
// [0]       _connectionKey: '6::::5000',
// [0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
// [0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
// [0]       [Symbol(shapeMode)]: false,
// [0]       [Symbol(kCapture)]: false,
// [0]       [Symbol(async_id_symbol)]: 125,
// [0]       [Symbol(kUniqueHeaders)]: null,
// [0]       [Symbol(http.server.connections)]: ConnectionsList {},
// [0]       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
// [0]         _idleTimeout: 30000,
// [0]         _idlePrev: [TimersList],
// [0]         _idleNext: [TimersList],
// [0]         _idleStart: 864,
// [0]         _onTimeout: [Function: bound checkConnections],
// [0]         _timerArgs: undefined,
// [0]         _repeat: 30000,
// [0]         _destroyed: false,
// [0]         [Symbol(refed)]: false,
// [0]         [Symbol(kHasPrimitive)]: false,
// [0]         [Symbol(asyncId)]: 128,
// [0]         [Symbol(triggerId)]: 126,
// [0]         [Symbol(kAsyncContextFrame)]: undefined
// [0]       }
// [0]     },
// [0]     parser: HTTPParser {
// [0]       '0': null,
// [0]       '1': [Function: parserOnHeaders],
// [0]       '2': [Function: parserOnHeadersComplete],
// [0]       '3': [Function: parserOnBody],
// [0]       '4': [Function: parserOnMessageComplete],
// [0]       '5': [Function: bound onParserExecute],
// [0]       '6': [Function: bound onParserTimeout],
// [0]       _headers: [],
// [0]       _url: '',
// [0]       socket: [Circular *2],
// [0]       incoming: [IncomingMessage],
// [0]       outgoing: null,
// [0]       maxHeaderPairs: 2000,
// [0]       _consumed: true,
// [0]       onIncoming: [Function: bound parserOnIncoming],
// [0]       joinDuplicateHeaders: null,
// [0]       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
// [0]     },
// [0]     on: [Function: socketListenerWrap],
// [0]     addListener: [Function: socketListenerWrap],
// [0]     prependListener: [Function: socketListenerWrap],
// [0]     setEncoding: [Function: socketSetEncoding],
// [0]     _paused: false,
// [0]     _httpMessage: [Circular *1],
// [0]     timeout: 0,
// [0]     [Symbol(async_id_symbol)]: 311,
// [0]     [Symbol(kHandle)]: TCP {
// [0]       reading: true,
// [0]       onconnection: null,
// [0]       _consumed: true,
// [0]       [Symbol(owner_symbol)]: [Circular *2]
// [0]     },
// [0]     [Symbol(lastWriteQueueSize)]: 0,
// [0]     [Symbol(timeout)]: Timeout {
// [0]       _idleTimeout: -1,
// [0]       _idlePrev: null,
// [0]       _idleNext: null,
// [0]       _idleStart: 8772,
// [0]       _onTimeout: null,
// [0]       _timerArgs: undefined,
// [0]       _repeat: null,
// [0]       _destroyed: true,
// [0]       [Symbol(refed)]: false,
// [0]       [Symbol(kHasPrimitive)]: false,
// [0]       [Symbol(asyncId)]: 331,
// [0]       [Symbol(triggerId)]: 327,
// [0]       [Symbol(kAsyncContextFrame)]: undefined
// [0]     },
// [0]     [Symbol(kBuffer)]: null,
// [0]     [Symbol(kBufferCb)]: null,
// [0]     [Symbol(kBufferGen)]: null,
// [0]     [Symbol(shapeMode)]: true,
// [0]     [Symbol(kCapture)]: false,
// [0]     [Symbol(kSetNoDelay)]: true,
// [0]     [Symbol(kSetKeepAlive)]: false,
// [0]     [Symbol(kSetKeepAliveInitialDelay)]: 0,
// [0]     [Symbol(kBytesRead)]: 0,
// [0]     [Symbol(kBytesWritten)]: 0
// [0]   },
// [0]   [Symbol(kOutHeaders)]: [Object: null prototype] {
// [0]     'x-powered-by': [ 'X-Powered-By', 'Express' ],
// [0]     'set-cookie': [
// [0]       'Set-Cookie',
// [0]       'jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NjliNjYyMTZiYzAyZjQ2MDY1ZDA1NDUiLCJpYXQiOjE3MjY5MTI0NDQsImV4cCI6MTcyOTUwNDQ0NH0.ahUub6_JYbiVvJwL8CF7UDGpaYiPH6H0PSs8JPXkahY; Max-Age=2592000; Path=/; Expires=Mon, 21 Oct 2024 09:54:04 GMT; HttpOnly; SameSite=Strict'
// [0]     ]
// [0]   },
// [0]   [Symbol(errored)]: null,
// [0]   [Symbol(kHighWaterMark)]: 16384,
// [0]   [Symbol(kRejectNonStandardBodyWrites)]: false,
// [0]   [Symbol(kUniqueHeaders)]: null
// [0] }
